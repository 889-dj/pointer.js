{"mappings":"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","sources":["Desktop/pointer/index.js","Desktop/pointer/cursor/simple-cursor.js","Desktop/pointer/cursor/rim-cursor.js","Desktop/pointer/cursor/chrome-cursor.js","Desktop/pointer/cursor/pen-cursor.js","Desktop/pointer/cursor/snow-cursor.js"],"sourcesContent":["import simple_cursor from './cursor/simple-cursor';\nimport rim_cursor from './cursor/rim-cursor';\nimport chrome_cursor from './cursor/chrome-cursor';\nimport pen_cursor from './cursor/pen-cursor';\nimport snow_cursor from './cursor/snow-cursor';\n\n\nconst simpleCursor = document.querySelectorAll('.simple_cursor');\nconst rimCursor = document.querySelectorAll('.rim_cursor');\nconst chromeCursor = document.querySelectorAll('.chrome_cursor');\nconst penCursor = document.querySelectorAll('.pen_cursor');\nconst snowCursor = document.querySelectorAll('.snow_cursor');\n\nif(simpleCursor.length > 0) {\n    simpleCursor.forEach((item)=>{\n        simple_cursor(item);\n    });\n}\n\nif(rimCursor.length > 0) {\n    rimCursor.forEach((item)=>{\n        rim_cursor(item);\n    });\n}\n\nif(chromeCursor.length > 0) {\n    chromeCursor.forEach((item)=>{\n        chrome_cursor(item);\n    });\n}\n\nif(penCursor.length > 0) {\n    penCursor.forEach((item)=>{\n        pen_cursor(item);\n    });\n}\n\nif(snowCursor.length > 0) {\n    snowCursor.forEach((item)=>{\n        snow_cursor(item);\n    });\n}\n","function simple_cursor (node) {\n    // If some rubbish string is added in the cursor-color attribute, the default color will be black.\n    const color = node.getAttribute('color');\n    const style = document.createElement('style');\n\n    let css = `\n    .simple_cursor > * {\n        cursor: inherit;\n    }\n    `;\n    style.textContent = css;\n    document.head.appendChild(style);\n\n    // TODO - Use TypeScript type system for the color paramater.\n    function getSVG () {\n        return `\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n                height=\"16\"\n                width=\"16\"\n                fill=\"${color}\"\n            >\n                <circle cx=\"6\" cy=\"6\" r=\"5\" ></circle>\n            </svg>`;\n    }\n\n\n    const blob = new Blob( [ getSVG() ], { type: 'image/svg+xml' } );\n\n    const urli = window.URL.createObjectURL( blob );\n\n    // The center will be chosen as the center of actual svg element from the top-left corner\n    node.style.cursor = `url(${urli}) 8 8, pointer`;\n\n\n    //Browsers will release object URLs automatically when the document is unloaded; \n    //however, for optimal performance and memory usage, if there are safe times when you can explicitly \n    //unload them, you should do so.\n    node.addEventListener('mouseleave', () => {\n        URL.revokeObjectURL(urli);     \n    });   \n}\n\nexport default simple_cursor;\n","function rim_cursor (node) {\n   const inner_color = node.getAttribute('inner_color');\n   const outer_color =  node.getAttribute('outer_color');\n   const style = document.createElement('style');\n   \n\n   let css = `\n   .rim_cursor > * {\n      cursor: inherit;\n   }\n   `;\n   style.textContent = css;\n   document.head.appendChild(style);\n      \n   // TODO - Use TypeScript type system for the color paramater.\n   function getSVG () {\n      return `\n         <svg xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"30\"\n            width=\"30\"\n            fill=\"${inner_color}\"\n            >\n            <circle class=\"outer-circle\" cx=\"15\" cy=\"15\" r=\"12\" stroke=\"${outer_color}\"\n               stroke-width=\"2\" fill=\"transparent\"></circle>\n            <circle cx=\"15\" cy=\"15\" r=\"3\" ></circle>\n         </svg>`;\n      }\n\n      //Browsers will release object URLs automatically when the document is unloaded; \n      //however, for optimal performance and memory usage, if there are safe times when you can explicitly \n      //unload them, you should do so.\n      const blob = new Blob( [ getSVG() ], { type: 'image/svg+xml' } );\n\n      const uri = window.URL.createObjectURL( blob );\n\n      node.style.cursor = `url(${uri}) 15 15, pointer`;\n\n      // TODO: Revoke Object URL\n}\n\nexport default rim_cursor;","function chrome_cursor (node) {\n    const outer_color = node.getAttribute('outer_color');\n    const inner_color = node.getAttribute('inner_color');\n    const style = document.createElement('style');\n\n    let css = `\n    .chrome_cursor > * {\n        cursor: inherit;\n    }\n    `;\n    style.textContent = css;\n    document.head.appendChild(style);\n\n    function getSVG () {\n        return `\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n                height=\"30\"\n                width=\"30\"\n                fill=\"${inner_color}\"\n                >\n                <circle class=\"outer-circle\" cx=\"15\" cy=\"15\" r=\"12\" stroke=\"${outer_color}\"\n                stroke-width=\"2\" fill-opacity=\"0.6\"></circle>\n            </svg>`;\n    }\n\n\n    const blob = new Blob( [ getSVG() ], { type: 'image/svg+xml' } );\n\n    const urli = window.URL.createObjectURL( blob );\n\n    // The center will be chosen as the center of actual svg element from the top-left corner\n    node.style.cursor = `url(${urli}) 15 15, pointer`;\n\n\n    //Browsers will release object URLs automatically when the document is unloaded; \n    //however, for optimal performance and memory usage, if there are safe times when you can explicitly \n    //unload them, you should do so.\n    node.addEventListener('mouseleave', () => {\n        URL.revokeObjectURL(urli);     \n    });\n}\n\nexport default chrome_cursor;","function pen_cursor (node) {\n    const color = node.getAttribute('color');\n    const style = document.createElement('style');\n\n    let css = `\n    .pen_cursor > * {\n        cursor: inherit;\n    }\n    `;\n    style.textContent = css;\n    document.head.appendChild(style);\n\n    function getSVG () {\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\"\n           viewBox=\"0 0 512 512\"\n           height=\"16px\"\n           width=\"16px\"\n           fill=\"${color}\"\n          >\n          <path d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 \n          12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 \n          277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91\n          0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"/>\n        </svg>`;\n    }\n\n    const blob = new Blob( [ getSVG(color) ], { type: 'image/svg+xml' } );\n\n    const urli = window.URL.createObjectURL( blob );\n\n    // The center will be chosen as the center of actual svg element from the top-left corner\n    node.style.cursor = `url(${urli}) 0 15, pointer`;\n\n\n    //Browsers will release object URLs automatically when the document is unloaded; \n    //however, for optimal performance and memory usage, if there are safe times when you can explicitly \n    //unload them, you should do so.\n    node.addEventListener('mouseleave', () => {\n        URL.revokeObjectURL(urli);     \n    });\n}\n\nexport default pen_cursor;","function snow_cursor (node) {\n    // If some rubbish string is added in the cursor-color attribute, the default color will be black.\n    const color = node.getAttribute('color');\n    const style = document.createElement('style');\n\n    let css = `\n    .snow_cursor > * {\n        cursor: inherit;\n    }\n    `;\n    style.textContent = css;\n    document.head.appendChild(style);\n\n\n    // TODO - Use TypeScript type system for the color paramater.\n    function getSVG () {\n        return `\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n                height=\"30\"\n                width=\"30\"\n                fill=\"${color}\"\n            >\n             <circle cx=\"15\" cy=\"15\" r=\"5\" stroke=\"${color}\"\n               stroke-width=\"20\" opacity=\"0.4\"></circle>\n             <circle cx=\"15\" cy=\"15\" r=\"5\" ></circle>\n            </svg>`;\n    }\n\n\n    const blob = new Blob( [ getSVG() ], { type: 'image/svg+xml' } );\n\n    const urli = window.URL.createObjectURL( blob );\n\n    // The center will be chosen as the center of actual svg element from the top-left corner\n    node.style.cursor = `url(${urli}) 15 15, pointer`;\n\n\n    //Browsers will release object URLs automatically when the document is unloaded; \n    //however, for optimal performance and memory usage, if there are safe times when you can explicitly \n    //unload them, you should do so.\n    node.addEventListener('mouseleave', () => {\n        URL.revokeObjectURL(urli);     \n    });\n    \n}\n\nexport default snow_cursor;\n"],"names":[],"version":3,"file":"index.js.map"}